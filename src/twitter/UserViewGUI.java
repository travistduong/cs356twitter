
package twitter;

import java.util.ArrayList;
import java.util.Enumeration;
import javax.swing.DefaultListModel;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 * Class: CS356
 * Assignment: Project 2
 * @author travisduong
 * 
 */
public class UserViewGUI extends javax.swing.JFrame {
    private user use;
    private DefaultTreeModel model;
    private metadata meta;
    private final DefaultListModel listModel = new DefaultListModel(); //currently following
    private final DefaultListModel listModel2 = new DefaultListModel(); //news feed
    
    /**
     * Creates new form UserViewGUI
     */
    public UserViewGUI() {
        initComponents();
    }
    
    public UserViewGUI(user x, JTree y, metadata z) {
        use = x;
        model = (DefaultTreeModel) y.getModel();
        meta = z;
        initComponents();
        followingList.setModel(listModel);
        feedList.setModel(listModel2);
        this.setTitle(use.getID());
        updateListModel();
        updateListModel2();
    }
    
    public void updateListModel() {
        ArrayList<user> followings = use.getFollowings();
        for (user u : followings) {
            listModel.addElement(u);
        }
    }
    
    public void updateListModel2() {
        ArrayList<String> tweets = use.getTweets();
        for (String t : tweets) {
            listModel2.addElement(t);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        followUserButton = new javax.swing.JButton();
        userID = new javax.swing.JTextArea();
        postTweetButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tweetMessage = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        feedList = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        followingList = new javax.swing.JList<>();
        label = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        followUserButton.setText("Follow User");
        followUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                followUserButtonActionPerformed(evt);
            }
        });

        userID.setColumns(20);
        userID.setRows(5);

        postTweetButton.setText("Post Tweet");
        postTweetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postTweetButtonActionPerformed(evt);
            }
        });

        tweetMessage.setColumns(20);
        tweetMessage.setRows(5);
        jScrollPane2.setViewportView(tweetMessage);

        jScrollPane3.setViewportView(feedList);

        jScrollPane1.setViewportView(followingList);

        jLabel1.setText("Currently Following:");

        jLabel2.setText("News Feed:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(postTweetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(followUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(followUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(postTweetButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void followUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_followUserButtonActionPerformed

        label.setText("");

        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        Enumeration en = root.depthFirstEnumeration();
        // Check if blank
        if (!userID.getText().trim().equals("")) {
            // Loop through the tree
            while (en.hasMoreElements()) {
                DefaultMutableTreeNode node = (DefaultMutableTreeNode) en.nextElement();
                
                // Check for a valid user
                if (userID.getText().equals(use.getID())) {
                    label.setText("ERROR: You cannot follow yourself");
                    return;
                }
                if (userID.getText().equals(node.toString())) {
                    // Check if already following
                    user checkNode = (user) node.getUserObject();
                    for (user u : use.getFollowings()) {
                    if (u == checkNode) {
                        label.setText(u.getID() + " is already being followed");
                        return;
                    } 
                }
                    user userNode = (user) node.getUserObject();
                    System.out.println("woop");
                    // userToFollow.attach(thisUser)
                    userNode.attach(use);
                    use.follow(userNode);  // Add userNode to followings; use to followers of userNode
                    listModel.addElement(userNode.getID());
                    label.setText(userNode.getID() + " has been followed");
                    updateListModel2();
                    break;
      
                } else {
                    label.setText("ERROR: User does not exist");
                }
            }
        } else {
            label.setText("ERROR: You must enter a user");
        }
    }//GEN-LAST:event_followUserButtonActionPerformed

    private void postTweetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postTweetButtonActionPerformed
        label.setText("");
        if (!tweetMessage.getText().trim().equals("")) {
            String tweet = tweetMessage.getText();
            use.addTweet(tweet);
            meta.addMessage(tweet);
            listModel2.addElement(use.getID() + ": " + tweet);
            label.setText("SUCCESS: Your followers have received your tweet");
        } else {
            label.setText("ERROR: You must enter a tweet");
        }
        
    }//GEN-LAST:event_postTweetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new UserViewGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> feedList;
    private javax.swing.JButton followUserButton;
    private javax.swing.JList<String> followingList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel label;
    private javax.swing.JButton postTweetButton;
    private javax.swing.JTextArea tweetMessage;
    private javax.swing.JTextArea userID;
    // End of variables declaration//GEN-END:variables
}
