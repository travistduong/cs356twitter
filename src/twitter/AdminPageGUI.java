
package twitter;

import java.awt.Component;
import java.util.ArrayList;
import java.util.Enumeration;
import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeCellRenderer;

/**
 * Class: CS356
 * Assignment: Project 2
 * @author travisduong
 * 
 */
public class AdminPageGUI extends javax.swing.JFrame {

    protected static AdminPageGUI instance;
    metadata meta = new metadata(); //Stores metadata
    
    protected AdminPageGUI() {
        initComponents();
    }
    // Singleton
    public static AdminPageGUI getInstance() {
	if (instance == null) {
            instance = new AdminPageGUI();
            }
            return instance;
	}
    
    /**
     * Creates new form AdminPageGUI
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addUserButton = new javax.swing.JButton();
        addGroupButton = new javax.swing.JButton();
        userID = new javax.swing.JTextArea();
        groupID = new javax.swing.JTextArea();
        openUserButton = new javax.swing.JButton();
        showPositiveButton = new javax.swing.JButton();
        showMessagesButton = new javax.swing.JButton();
        showGroupTotalButton = new javax.swing.JButton();
        showUserTotalButton = new javax.swing.JButton();
        tree = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        verifyID = new javax.swing.JButton();
        findLastUpdatedUser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin Page");

        addUserButton.setText("Add User");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        addGroupButton.setText("Add Group");
        addGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGroupButtonActionPerformed(evt);
            }
        });

        userID.setColumns(20);
        userID.setRows(5);

        groupID.setColumns(20);
        groupID.setRows(5);

        openUserButton.setText("Open User View");
        openUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openUserButtonActionPerformed(evt);
            }
        });

        showPositiveButton.setText("Show Positive Percentage");
        showPositiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPositiveButtonActionPerformed(evt);
            }
        });

        showMessagesButton.setText("Show Messages Total");
        showMessagesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMessagesButtonActionPerformed(evt);
            }
        });

        showGroupTotalButton.setText("Show Group Total");
        showGroupTotalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showGroupTotalButtonActionPerformed(evt);
            }
        });

        showUserTotalButton.setText("Show User Total");
        showUserTotalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showUserTotalButtonActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setText("Note: To view updates within a user's newsfeed, please close and reopen the user view.");

        verifyID.setText("Validate IDs");
        verifyID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyIDActionPerformed(evt);
            }
        });

        findLastUpdatedUser.setText("Last Updated User");
        findLastUpdatedUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findLastUpdatedUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tree, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(findLastUpdatedUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(verifyID, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(showMessagesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                .addComponent(showUserTotalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(showPositiveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                .addComponent(showGroupTotalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(groupID, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(addGroupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addUserButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(openUserButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(addUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(groupID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addGroupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(openUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(verifyID)
                            .addComponent(findLastUpdatedUser))
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(showUserTotalButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(showGroupTotalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showMessagesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(showPositiveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(tree, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        jLabel1.setText("");
        DefaultTreeModel model = (DefaultTreeModel) tree.getModel();
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        // Ensure unique ID
        Enumeration en = root.depthFirstEnumeration();
        while (en.hasMoreElements()) {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) en.nextElement();
            if (userID.getText().equals(node.toString())) {
                jLabel1.setText("ERROR: User must have unique ID");
                return;
            }
        }
        // Ensure a parent node is selected / Add user
        if (selectedNode == null) {
            jLabel1.setText("You must choose a parent node to insert");
        } else {
            if (!userID.getText().trim().equals("")) {
                user user = new user(userID.getText());
                DefaultMutableTreeNode node = new DefaultMutableTreeNode(user);
                model.insertNodeInto(node, selectedNode, selectedNode.getChildCount());
                meta.addUser();
                node.setAllowsChildren(false);
            } else {
                jLabel1.setText("You must enter a user");
            }
        }
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void addGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGroupButtonActionPerformed
        jLabel1.setText("");
        DefaultTreeModel model = (DefaultTreeModel) tree.getModel();
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        // Ensure unique ID
        Enumeration en = root.depthFirstEnumeration();
        while (en.hasMoreElements()) {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) en.nextElement();
            if (groupID.getText().equals(node.toString())) {
                jLabel1.setText("ERROR: Group must have unique ID");
                return;
            }
        }
        // Ensure a parent node is selected / Add group
        if (selectedNode == null) {
            jLabel1.setText("You must choose a parent node to insert");
        } else {
            if (!groupID.getText().trim().equals("")) {
                group group = new group(groupID.getText());
                DefaultMutableTreeNode node = new DefaultMutableTreeNode(group);
                model.insertNodeInto(node, selectedNode, selectedNode.getChildCount());
                meta.addGroup();
                
                // Visitor Design Pattern (theory): to set icons within the tree
                treeVisitor tv = new treeVisitor();
                while (en.hasMoreElements()) {
                    DefaultMutableTreeNode n = (DefaultMutableTreeNode) en.nextElement();
                    composite c = (composite) n.getUserObject();
                    c.accept(tv);
                    // Needs code that actually changes the icon within the tree
                    // Should use setIcon(ImageIcon icon) to appropriately set the icon of either a group or leaf
                }
                
                // Setting the folder icon for groups
                tree.setCellRenderer(new twitterTreeCellRenderer());
            } else {
                jLabel1.setText("You must enter a group");
            }
        }

    }//GEN-LAST:event_addGroupButtonActionPerformed

    class twitterTreeCellRenderer implements TreeCellRenderer {
        // Set the tree to render groups with a folder icon
        private final JLabel label;
        private final DefaultTreeCellRenderer renderer = (DefaultTreeCellRenderer) tree.getCellRenderer();
        twitterTreeCellRenderer() {
            label = new JLabel();
        }

        @Override
        public Component getTreeCellRendererComponent(JTree jtree, Object value, boolean bln, boolean bln1, boolean bln2, int i, boolean bln3) {
            Object x = ((DefaultMutableTreeNode) value).getUserObject();
            if (x instanceof group) {
                group groop = (group) x;
                label.setIcon(renderer.getDefaultOpenIcon());
                label.setText(groop.getGroupID());
            } else {
                label.setIcon(null);
                label.setText("" + value);
            }
            return label;
        }
    }
    
    private void openUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openUserButtonActionPerformed
        // Open a UserViewGUI frame
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        user use = (user) selectedNode.getUserObject();
        UserViewGUI gui = new UserViewGUI(use, tree, meta);
        gui.setVisible(true);
    }//GEN-LAST:event_openUserButtonActionPerformed

    private void showUserTotalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showUserTotalButtonActionPerformed
        int x = meta.getUserTotal();
        JOptionPane.showMessageDialog(null, x + " users.");
    }//GEN-LAST:event_showUserTotalButtonActionPerformed

    private void showGroupTotalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showGroupTotalButtonActionPerformed
        int x = meta.getGroupTotal();
        JOptionPane.showMessageDialog(null, x + " groups.");
    }//GEN-LAST:event_showGroupTotalButtonActionPerformed

    private void showMessagesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMessagesButtonActionPerformed
        int x = meta.getMessageTotal();
        JOptionPane.showMessageDialog(null, x + " messages.");
    }//GEN-LAST:event_showMessagesButtonActionPerformed

    private void showPositiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPositiveButtonActionPerformed
        JOptionPane.showMessageDialog(null, meta.getPP() + " % positive.");
    }//GEN-LAST:event_showPositiveButtonActionPerformed

    private void verifyIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyIDActionPerformed
        jLabel1.setText("");
        
        ArrayList<String> names = new ArrayList<>();
        DefaultTreeModel model = (DefaultTreeModel) tree.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        // Ensure unique ID
        Enumeration en = root.depthFirstEnumeration();
        while (en.hasMoreElements()) {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) en.nextElement();
            char[] car = node.toString().toCharArray();
            for (int i = 0; i < car.length; i++) {
                if (car[i] == ' ') {
                    jLabel1.setText("ERROR: IDs cannot contain space characters.");
                    return;
                }
            }
            for (String s : names) {
                if (node.toString().toLowerCase().equals(s.toLowerCase())) {
                    jLabel1.setText("ERROR: Duplicate IDs exist.");
                    return;
                }
            }
            names.add(node.toString());
        }
        jLabel1.setText("SUCCESS: All IDs are valid.");
    }//GEN-LAST:event_verifyIDActionPerformed

    private void findLastUpdatedUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findLastUpdatedUserActionPerformed
        String x = meta.getLastUserUpdated().getID();
        JOptionPane.showMessageDialog(null,"[" + x + "] was updated the latest.");
    }//GEN-LAST:event_findLastUpdatedUserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                AdminPageGUI page = AdminPageGUI.getInstance();
                AdminPageGUI page2 = AdminPageGUI.getInstance();
                page.setVisible(true);
                page2.setVisible(true); // Singleton Test
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGroupButton;
    private javax.swing.JButton addUserButton;
    private javax.swing.JButton findLastUpdatedUser;
    private javax.swing.JTextArea groupID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton openUserButton;
    private javax.swing.JButton showGroupTotalButton;
    private javax.swing.JButton showMessagesButton;
    private javax.swing.JButton showPositiveButton;
    private javax.swing.JButton showUserTotalButton;
    private javax.swing.JTree tree;
    private javax.swing.JTextArea userID;
    private javax.swing.JButton verifyID;
    // End of variables declaration//GEN-END:variables
}
